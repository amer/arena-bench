<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <!-- move base -->
    <arg name="model" default="turtlebot3_burger"/>
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find conventional)/config/$(arg model)/costmap_common_params.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find conventional)/config/$(arg model)/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find conventional)/config/$(arg model)/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find conventional)/config/$(arg model)/global_costmap_params.yaml" command="load" />
    </node>

    <!-- spacial_horizon -->
    <node pkg="arena_spacial_horizon" type="spacial_horizon_node" name="spacial_horizon_node" >
        <rosparam file="$(find conventional)/config/$(arg model)/plan_fsm_param.yaml" command="load" /> <!-- ns="fsm"-->
    </node>

    <!-- Launch CADRL node ,neural net ros wrapper -->
  
	<!-- <arg name="robot_speed" default="2"/>
    <node pkg="cadrl_ros" type="cadrl_node_3d.py" name="cadrl_node" output="screen" ns="/cadrl">
        
        <remap from="~other_vels" to="other_vels"/>
        <remap from="~nn_cmd_vel" to="/cmd_vel"/>
        <remap from="~pose_marker" to="pose_marker"/>
        <remap from="~path_marker" to="path_marker"/>
        <remap from="~goal_path_marker" to="goal_path_marker"/>
        <remap from="~agent_marker" to="other_agents_marker"/>
        <remap from="~agent_markers" to="other_agents_markers"/>
        
        <remap from="~pose" to="/odom"/>
        <remap from="~velocity" to="velocity"/>
        <remap from="~safe_actions" to="local_path_finder/safe_actions"/>
        <remap from="~planner_mode" to="planner_fsm/mode"/>
        <remap from="~goal" to="/goal"/>
        <remap from="~subgoal" to="/plan_manager/subgoal"/>
        <remap from="~clusters" to="/obst_odom"/>
        <remap from="~peds" to="ped_manager/ped_recent"/>
        
        <param name="~robot_speed" value="$(arg robot_speed)"/>

    </node> -->


    <!-- pedsim agent state to cluster msg converter -->
    <!-- <node pkg="cadrl_ros" type="ped_to_ford.py" name="ped_to_ford" output="screen"></node> -->


</launch>