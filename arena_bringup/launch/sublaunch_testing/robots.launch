<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <arg name="model"/>
    <arg name="real"/>


    <!-- Robot specific parameter -->
    <rosparam file="$(find arena_bringup)/launch/sublaunch_testing/robot_params/$(arg model)_params.yaml" />


    <!-- Launching additional nodes needed for some robots -->
    <include file="$(find arena_bringup)/launch/sublaunch_testing/robot_launch/tiago_robot.launch" if="$(eval arg('model') == 'tiago')"/>
    <include file="$(find arena_bringup)/launch/sublaunch_testing/robot_launch/cob4_robot.launch" if="$(eval arg('model') == 'cob4')"/>
    <include file="$(find arena_bringup)/launch/sublaunch_testing/robot_launch/youbot_robot.launch" if="$(eval arg('model') == 'youbot')"/>
    <include file="$(find simulator_setup)/robot/jackal/launch/control.launch" if="$(eval arg('model') == 'jackal')"/>
    <include file="$(find simulator_setup)/robot/ridgeback/control/launch/control.launch" if="$(eval arg('model') == 'ridgeback')"/>

    <group if="$(eval arg('model') == 'agv-ota')">
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
        <node name="emergency_brake" pkg="task_generator" type="emergency_brake_node.py"/>
    </group>


    <!-- For gring -->
    <rosparam file="$(find arena_local_planner_drl)/rl_agent/gring_params/rl_params_$(arg model).yaml" command="load" ns="sim1"/>


    <!--  publish the state of a robot to tf2 -->
    <group if="$(eval arg('real') == false)">
        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
            <param name="publish_frequency" type="double" value="50.0" />
        </node>
    </group>
</launch>